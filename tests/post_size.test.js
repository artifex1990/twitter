import { assert } from 'chai';
import postSize from '../public/assets/post_size.js';

describe('–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ—Å—Ç–∞', function () {
  it('–±–µ–∑ —Å—Å—ã–ª–æ–∫', function () {
    const expectedResult = 12;
    const result = postSize('–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!');
    assert.equal(expectedResult, result);
  });

  it('—Å http —Å—Å—ã–ª–∫–æ–π', function () {
    const expectedResult = 22;
    const result = postSize('–í–æ—Ç —Å—Å—ã–ª–∫–∞: http://example.com –ø—Ä–æ–≤–µ—Ä—å—Ç–µ');
    assert.equal(expectedResult, result);
  });

  it('—Å https —Å—Å—ã–ª–∫–æ–π', function () {
    const expectedResult = 22;
    const result = postSize('–í–æ—Ç —Å—Å—ã–ª–∫–∞: https://example.com –ø—Ä–æ–≤–µ—Ä—å—Ç–µ');
    assert.equal(expectedResult, result);
  });

  it('—Å www —Å—Å—ã–ª–∫–æ–π', function () {
    const expectedResult = 22;
    const result = postSize('–í–æ—Ç —Å—Å—ã–ª–∫–∞: www.example.com –ø—Ä–æ–≤–µ—Ä—å—Ç–µ');
    assert.equal(expectedResult, result);
  });

  it('—Å–æ —Å—Å—ã–ª–∫–æ–π –≤ –∫–æ–Ω—Ü–µ', function () {
    const expectedResult = 11;
    const result = postSize('–°—Å—ã–ª–∫–∞ —Ç—É—Ç http://example.com');
    assert.equal(expectedResult, result);
  });

  it('—Å–æ —Å—Å—ã–ª–∫–æ–π –≤ –Ω–∞—á–∞–ª–µ', function () {
    const expectedResult = 11;
    const result = postSize('http://example.com –°—Å—ã–ª–∫–∞ —Ç—É—Ç');
    assert.equal(expectedResult, result);
  });

  it('—Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∞', function () {
    const expectedResult = 0;
    const result = postSize('http://example.com');
    assert.equal(expectedResult, result);
  });

  it('–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫', function () {
    const expectedResult = 24;
    const result = postSize('–°—Å—ã–ª–∫–∏: http://example1.com –∏ www.example2.com –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Ö');
    assert.equal(expectedResult, result);
  });

  it('—Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ —Å—Å—ã–ª–∫–æ–π', function () {
    const expectedResult = 19;
    const result = postSize('–ú–Ω–æ–≥–æ   –ø—Ä–æ–±–µ–ª–æ–≤   http://example.com');
    assert.equal(expectedResult, result);
  });

  it('—Å–æ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏', function () {
    const expectedResult = 13;
    const result = postSize('–ü—Ä–∏–≤–µ—Ç! @#$% http://example.com');
    assert.equal(expectedResult, result);
  });

  it('—Å —ç–º–æ–¥–∑–∏', function () {
    const expectedResult = 10;
    const result = postSize('–ü—Ä–∏–≤–µ—Ç! üòä http://example.com');
    assert.equal(expectedResult, result);
  });
});